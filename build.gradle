buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.0")
    }
    subprojects {
        gradle.projectsEvaluated {
            allprojects {
                jar { enabled = true }
            }
        }
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.youzanyun.com/repository/maven-public' }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    group = 'top.dongxiaohao'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        compile('com.github.oshi:oshi-core:6.4.0')
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        compile 'com.dtflys.forest:forest-spring-boot-starter:1.5.28'
        compile 'com.alibaba:druid:1.2.15'
        compile('org.springframework.boot:spring-boot-starter-jetty')
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0")
        compile('org.springframework.boot:spring-boot-starter-jdbc')
        compile('org.springframework.boot:spring-boot-starter-data-redis')
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.12')
        compile('mysql:mysql-connector-java')
        compile('commons-io:commons-io:2.6')
        compile('cn.hutool:hutool-all:5.8.23')
        compile("log4j:log4j:1.2.17")
        compile("io.jsonwebtoken:jjwt:0.9.0")
        compile('javax.validation:validation-api:2.0.1.Final')
        compile('com.dtflys.forest:forest-spring-boot-starter:1.5.30')

        //lombok
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        testCompileOnly 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

        //mapStruct此处必须配置annotationProcessor，否则ast不起作用
        compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: '1.3.1.Final'
        annotationProcessor("org.mapstruct:mapstruct-processor:1.3.1.Final")
        testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.3.1.Final")

        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('junit:junit:4.12')
        implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.78'

        implementation 'com.baomidou:mybatis-plus-generator:3.4.1'
        implementation 'org.apache.velocity:velocity:1.7'
    }

    task cleanSqlmaps(type: Delete) {
        def files = fileTree("${buildDir}/classes/java", {
            include "**/*.xml"
        })
        delete files
    }

    task copySqlmaps(type: Copy, dependsOn: cleanSqlmaps) {
        from "${projectDir}/src/main/java"
        include "**/*.xml"
        into "${buildDir}/classes/java/main"
        includeEmptyDirs = false
    }

    processResources.dependsOn {
        cleanSqlmaps
        copySqlmaps
    }
}
